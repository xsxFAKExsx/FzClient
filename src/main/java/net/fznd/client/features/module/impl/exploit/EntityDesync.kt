package net.aspw.client.features.module.impl.exploit

import net.aspw.client.event.EventTarget
import net.aspw.client.event.UpdateEvent
import net.aspw.client.features.module.Module
import net.aspw.client.features.module.ModuleCategory
import net.aspw.client.features.module.ModuleInfo


@ModuleInfo(name = "EntityDesync", spacedName = "Entity Desync", category = ModuleCategory.EXPLOIT)
class EntityDesync : Module() {

    @EventTarget
    fun onUpdate(event: UpdateEvent?) {
        if (!mc.thePlayer.isRiding) {
            return
        }
        if (mc.thePlayer.isRiding) {
            mc.thePlayer.dismountEntity(mc.thePlayer.ridingEntity)
            mc.theWorld.removeEntity(mc.thePlayer.ridingEntity)
        }
        if (mc.theWorld != null && mc.thePlayer != null) {
            if (mc.thePlayer.ridingEntity == null || mc.thePlayer.isRiding) return
            mc.thePlayer.ridingEntity.setPosition(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ)
        }
    }
}